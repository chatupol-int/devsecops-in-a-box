### start prerequisite ###
- kubectl
- docker
- docker-compose
- minikube
- Ubuntu
### end prerequisite ###

### start kube setup ###
minikube start

# Download the calico network plugin and plug to the cluster
kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml

### end kube setup ###

### start setup docker image registry ###

# create a kube namespace for a registry
kubectl create namespace registry

# generate docker auth
htpasswd -Bbn tiger PuI5UEnzvPBHyhvx > htpasswd

# generate the tls related
openssl req -x509 -nodes -days 365 -newkey rsa:4096   -keyout domain.key -out domain.crt   -config openssl-san.conf

# create kube secret for tls
kubectl create secret generic registry-tls \
  --from-file=tls.crt=certs/tls.crt \
  --from-file=tls.key=certs/tls.key \
  -n registry

# create kube secret for docker auth
kubectl create secret generic registry-auth \
  --from-file=htpasswd=auth/htpasswd \
  -n registry

# start running docker registry
cd ./containerization/kube/registry
kubectl apply -f registry

### end setup docker image registry ###

### start gitea setup ###
cd ./docker-composes/gitea
docker-compose up -d .

# setup the gitea action runner
0. update package
apk update

1. install the docker (to use the docker commands in the build process)
apk add docker-cli

2. install the nodejs (to checkout feature)
apk add nodejs npm  

3. install the kubectl (to build)
apk add --no-cache kubectl
3.1 config the kubectl config with the kube config as the cluster has
3.2 re-run the docker gitea action runner with the host network (maybe use docker commit to save the container state)

4. install the sonarQube scanner
4.1 in the action, uses the "checkout" to clone the repository.

### end gitea setup ###